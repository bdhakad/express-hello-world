# Use the latest 2.1 version of CircleCI pipeline process engine. See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1
# Use a package of configuration called an orb.
orbs:
  aws-cli: circleci/aws-cli@2.0.3

workflows:
  # Name the workflow "welcome"
  welcome:
    # Run the welcome/run job in its own container
    jobs:
      - create_infrastructure
      - configure_infrastructure:
          requires:
              - create_infrastructure
      - smoke_test:
          requires:
              - configure_infrastructure        
      # - build
      # - test:
      #     requires:
      #       - build
      # - analyze:
      #     requires:
      #       - test                  
jobs:
  configure_infrastructure:
    docker:
    - image: python:3.7-alpine3.11
    steps:
      - checkout 
      - add_ssh_keys:
          fingerprints: ["4c:e6:72:4d:76:84:ef:12:2b:ea:d7:d5:66:d5:41:79"]
      - run:
          name: install dependencies
          command: |
            apk add --update ansible     
      - run:
          name: configure server
          command: |
            ansible-playbook -i inventory.txt main-remote.yml
  create_infrastructure:
    docker:
    - image: amazon/aws-cli
    steps:
      - checkout 
      - run:
          name: Ensure backend infrastructure exists
          command: |
            aws cloudformation deploy \
            --stack-name circle-stack \
            --template-file cfn-template.yml
      - run:
          name: pull public ips 
          command: |
            aws ssm get-parameter --name "PublicIp" --with-decryption --output text --query Parameter.Value >> publicIp.txt
      - save_cache:
          key: my-cache
          paths:
            - publicIp.txt
            
  smoke_test:
    docker:
    - image: alpine:latest
    steps:
      - checkout
      - run: apk add --update curl 
      - restore_cache:
          keys:
            - my-cache
      - run: cat publicIp.txt  
      - run: echo $(<publicIp.txt)    
      - run:
          name: smoke_test
          command: |
            if curl -s --head http://$(<publicIp.txt):3000
            then
              return 0
            else
              return 1
            fi         
           

  # build:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - run: npm install
  #     - save_cache:
  #         key: "npm-packages"
  #         paths: 
  #           - /src/node_modules
  # test:
  #   docker:
  #     - image: circleci/node:13.8.0
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         keys:
  #           - "npm-packages"
  #     - run: npm i      
  #     - run: npm run test
  #     - run:
  #         name: Upload Failed Tests
  #         command: echo "test failures"
  #         when: on_fail

  # analyze:
  #     docker:
  #       - image: circleci/node:13.8.0
  #     steps:
  #       - checkout
  #       - restore_cache:
  #           keys:
  #             - "npm-packages"
  #       - run: npm audit
  #       - run:
  #           name: Upload Failed Tests
  #           command: echo "test failures"
  #           when: on_fail          
      
